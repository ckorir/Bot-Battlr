{"ast":null,"code":"var _jsxFileName = \"/home/korir/Development/code/phase-2/bot-project/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BotCollection() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [yourBotCollection, setYourBotCollection] = useState([]);\n  useEffect(() => {\n    // calls the fetchBots function\n    fetchBots();\n  }, []);\n  function fetchBots() {\n    const boturl = 'http://localhost:8001/bots';\n    fetch(boturl).then(response => response.json()) // Corrected this line\n    .then(data => setBots(data)).catch(error => console.error(error)); // Add error handling\n\n    // The following console.log will not show the updated state immediately due to asynchronous behavior.\n    console.log(bots);\n  }\n  const addToYourBotArmy = bot => {\n    if (!yourBotCollection.find(b => b.id === bot.id)) {\n      setYourBotCollection([...yourBotCollection, bot]);\n    }\n  };\n  const releaseFromYourBotArmy = bot => {\n    setYourBotCollection(yourBotCollection.filter(b => b.id !== bot.id));\n  };\n  const dischargeBot = bot => {\n    fetch(`http://localhost:8001/bots/${bot.id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setYourBotCollection(yourBotCollection.filter(b => b.id !== bot.id));\n    }).catch(error => console.error(error));\n  };\n\n  // Render your component with the updated `bots` state here.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container row mx-auto\",\n    children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: bot.avatar_url,\n          alt: \"bot image\",\n          className: \"img-fluid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col botinfo p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: bot.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: bot.catchphrase\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-heart-pulse mx-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this), bot.health]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-bolt-lightning mx-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 23\n                  }, this), bot.damage]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-shield-halved mx-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 21\n                  }, this), bot.armor]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, bot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"ndwQEflV461wV+VGD/+njLKACDw=\");\n_c = BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BotCollection","_s","bots","setBots","yourBotCollection","setYourBotCollection","fetchBots","boturl","fetch","then","response","json","data","catch","error","console","log","addToYourBotArmy","bot","find","b","id","releaseFromYourBotArmy","filter","dischargeBot","method","className","children","map","src","avatar_url","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","catchphrase","class","health","damage","armor","_c","$RefreshReg$"],"sources":["/home/korir/Development/code/phase-2/bot-project/src/components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function BotCollection() {\n  const [bots, setBots] = useState([]);\n  const [yourBotCollection, setYourBotCollection] = useState([]);\n\n\n  useEffect(() => {\n    // calls the fetchBots function\n    fetchBots();\n  }, []);\n\n  function fetchBots() {\n    const boturl = 'http://localhost:8001/bots';\n\n    fetch(boturl)\n      .then((response) => response.json()) // Corrected this line\n      .then(data => setBots(data))\n      .catch(error => console.error(error)); // Add error handling\n\n    // The following console.log will not show the updated state immediately due to asynchronous behavior.\n    console.log(bots);\n  }\n\n  const addToYourBotArmy = (bot) => {\n    if (!yourBotCollection.find(b => b.id === bot.id)) {\n      setYourBotCollection([...yourBotCollection, bot]);\n    }\n  };\n\n  const releaseFromYourBotArmy = (bot) => {\n    setYourBotCollection(yourBotCollection.filter(b => b.id !== bot.id));\n  };\n\n  const dischargeBot = (bot) => {\n    fetch(`http://localhost:8001/bots/${bot.id}`, {\n      method: 'DELETE'\n    })\n    .then(() => {\n      setYourBotCollection(yourBotCollection.filter(b => b.id !== bot.id));\n    })\n    .catch(error => console.error(error));\n  };\n\n  // Render your component with the updated `bots` state here.\n  return (\n    <div className=\"container row mx-auto\">\n      {bots.map(bot => (\n        <div className='col-md-3' key={bot.id}>\n          <div className='cards my-4'>\n            <img src={bot.avatar_url} alt='bot image' className='img-fluid' />\n            <div className='col botinfo p-4'>\n              <div>\n                <h5>{bot.name}</h5>\n                <p>{bot.catchphrase}</p>\n                <div>\n                  <ul className='stats'>\n                    <li>\n                      <i class=\"fa-solid fa-heart-pulse mx-1\"></i>\n                      {bot.health}\n                    </li>\n                    <li>\n                      <i class=\"fa-solid fa-bolt-lightning mx-1\"></i>\n                      {bot.damage}\n                    </li>\n                    <li>\n                    <i class=\"fa-solid fa-shield-halved mx-1\"></i>\n                      {bot.armor}\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}