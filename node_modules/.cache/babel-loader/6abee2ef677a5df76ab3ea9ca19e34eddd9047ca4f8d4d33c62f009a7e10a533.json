{"ast":null,"code":"var _jsxFileName = \"/home/korir/Development/code/phase-2/bot-project/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BotCollection() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    // calls the fetchBots function\n    fetchBots();\n  }, []);\n  function fetchBots() {\n    const boturl = 'http://localhost:8001/bots';\n    fetch(boturl).then(response => response.json()) // Corrected this line\n    .then(data => setBots(data)).catch(error => console.error(error)); // Add error handling\n\n    // The following console.log will not show the updated state immediately due to asynchronous behavior.\n    console.log(bots);\n  }\n\n  // Render your component with the updated `bots` state here.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: bot.name\n    }, bot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BotCollection","_s","bots","setBots","fetchBots","boturl","fetch","then","response","json","data","catch","error","console","log","children","map","bot","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/korir/Development/code/phase-2/bot-project/src/components/BotCollection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function BotCollection() {\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    // calls the fetchBots function\n    fetchBots();\n  }, []);\n\n  function fetchBots() {\n    const boturl = 'http://localhost:8001/bots';\n\n    fetch(boturl)\n      .then((response) => response.json()) // Corrected this line\n      .then(data => setBots(data))\n      .catch(error => console.error(error)); // Add error handling\n\n    // The following console.log will not show the updated state immediately due to asynchronous behavior.\n    console.log(bots);\n  }\n\n  // Render your component with the updated `bots` state here.\n  return (\n    <div>\n      {bots.map(bot => (\n        <div key={bot.id}>\n          {bot.name}</div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACAO,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,SAASA,SAASA,CAAA,EAAG;IACnB,MAAMC,MAAM,GAAG,4BAA4B;IAE3CC,KAAK,CAACD,MAAM,CAAC,CACVE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CACpCF,IAAI,CAACG,IAAI,IAAIP,OAAO,CAACO,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;;IAEzC;IACAC,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EACnB;;EAEA;EACA,oBACEH,OAAA;IAAAgB,QAAA,EACGb,IAAI,CAACc,GAAG,CAACC,GAAG,iBACXlB,OAAA;MAAAgB,QAAA,EACGE,GAAG,CAACC;IAAI,GADDD,GAAG,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACtB,EAAA,CA7BuBD,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}